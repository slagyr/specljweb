[:h3 [:a {:name "ch6"} "Stubbing Standard Input and Output"]]
[:p "Now that we have a basic understanding of how Speclj is used, let's start building our change counter application. We want this application to ask the user how many pennies, nickels, dimes, quarters, half dollars, and silver dollars they have. Then based off of those coin totals, return a count of how much money they have in dollar format."]

[:p "So let's get started. You should delete all of the code we added to core_spec.clj and core.clj, because that was just there for learning purposes. Now we want our core_spec.clj and core.clj files to look like <a href=\"#f7\">Figure 7</a> and <a href=\"#f8\">Figure 8</a> respectively."]


[:h5 [:a {:name "f7"} "Figure 7"]]
[:p "<pre class=\"textmate-source twilight\"><span class=\"source source_clojure\"><span class=\"meta meta_function meta_function_namespace meta_function_namespace_clojure\">(<span class=\"support support_function support_function_namespace support_function_namespace_clojure\">ns</span> <span class=\"entity entity_name entity_name_namespace entity_name_namespace_clojure\"><span class=\"source source_symbol source_symbol_clojure\">change-counter</span><span class=\"keyword keyword_operator keyword_operator_classpath keyword_operator_classpath_clojure\">.</span><span class=\"source source_symbol source_symbol_clojure\">core-spec</span></span>
  (<span class=\"source source_symbol source_symbol_clojure\">use</span> [<span class=\"source source_symbol source_symbol_clojure\">speclj</span><span class=\"keyword keyword_operator keyword_operator_classpath keyword_operator_classpath_clojure\">.</span><span class=\"source source_symbol source_symbol_clojure\">core</span>] [<span class=\"source source_symbol source_symbol_clojure\">change-counter</span><span class=\"keyword keyword_operator keyword_operator_classpath keyword_operator_classpath_clojure\">.</span><span class=\"source source_symbol source_symbol_clojure\">core</span>]))</span>
  
<span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">describe</span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>change-counter.core<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>
  <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">around</span> <span class=\"meta meta_expression meta_expression_vector meta_expression_vector_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_vector punctuation_definition_vector_begin punctuation_definition_vector_begin_clojure\">[</span><span class=\"source source_symbol source_symbol_clojure\">it</span><span class=\"punctuation punctuation_definition punctuation_definition_vector punctuation_definition_vector_end punctuation_definition_vector_end_clojure\">]</span></span>
    <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"support support_function support_function_match support_function_match_clojure\">with-out-str</span> <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">it</span>)</span>)</span>)</span>

  <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">it</span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>tests the input of prompt<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>
    <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">should<span class=\"keyword keyword_other keyword_other_mark keyword_other_mark_clojure\">=</span></span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>13<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>
      <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"support support_function support_function_match support_function_match_clojure\">with-in-str</span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>13<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>
        <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">prompt</span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>Enter amount of pennies<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>)</span>)</span>)</span>)</span>

  <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">it</span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>tests the output of prompt<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>
    <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">should<span class=\"keyword keyword_other keyword_other_mark keyword_other_mark_clojure\">=</span></span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>Where is my money?\\n<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>
      <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"support support_function support_function_match support_function_match_clojure\">with-out-str</span> <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"support support_function support_function_match support_function_match_clojure\">with-in-str</span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>10<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>
        <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"source source_symbol source_symbol_clojure\">prompt</span> <span class=\"string string_quoted string_quoted_double string_quoted_double_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_clojure\">\"</span>Where is my money?<span class=\"punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_clojure\">\"</span></span>)</span>)</span>)</span>)</span>)</span>)</span></span></pre>"]

[:h5 [:a {:name "f8"} "Figure 8"]]
[:p "<pre class=\"textmate-source twilight\"><span class=\"source source_clojure\"><span class=\"meta meta_function meta_function_namespace meta_function_namespace_clojure\">(<span class=\"support support_function support_function_namespace support_function_namespace_clojure\">ns</span> <span class=\"entity entity_name entity_name_namespace entity_name_namespace_clojure\"><span class=\"source source_symbol source_symbol_clojure\">change-counter</span><span class=\"keyword keyword_operator keyword_operator_classpath keyword_operator_classpath_clojure\">.</span><span class=\"source source_symbol source_symbol_clojure\">core</span></span>)</span>

<span class=\"meta meta_function meta_function_clojure\">(<span class=\"storage storage_type storage_type_function storage_type_function_type storage_type_function_type_clojure\">defn</span> <span class=\"entity entity_name entity_name_function entity_name_function_clojure\"><span class=\"source source_symbol source_symbol_clojure\">prompt</span></span> <span class=\"meta meta_function meta_function_body meta_function_body_clojure\"><span class=\"meta meta_function meta_function_parameters meta_function_parameters_vector meta_function_parameters_vector_clojure\"><span class=\"punctuation punctuation_definition punctuation_definition_vector punctuation_definition_vector_begin punctuation_definition_vector_begin_clojure\">[</span><span class=\"variable variable_parameter variable_parameter_clojure\"><span class=\"source source_symbol source_symbol_clojure\">message</span></span><span class=\"punctuation punctuation_definition punctuation_definition_vector punctuation_definition_vector_end punctuation_definition_vector_end_clojure\">]</span></span><span class=\"meta meta_function meta_function_body meta_function_body_code meta_function_body_code_clojure\">
  <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"storage storage_clojure\">println</span> <span class=\"source source_symbol source_symbol_clojure\">message</span>)</span>
  <span class=\"meta meta_sexpr meta_sexpr_clojure\">(<span class=\"support support_function support_function_clojure\">read-line</span>)</span></span></span>)</span></span></pre>"]

[:p "If we run our test it should pass, but what are we actually testing here? The prompt method simply prints a message to standard output and returns a value from standard input. So we want to write two tests, one to test the input and one to test the output. In order to write our tests we need an automated way of passing and returning information from standard input and standard output. We do this by using Clojure's with-in-str and with-out-str methods. Then we test the return values against our expectations using Speclj's should= component."]

[:p "You might be wondering why the output from calling the prompt function isn't showing up in your tests. This output would be a nuisance, so we used Speclj's around component. Around gets called every time a test is run and takes the actual test as an argument. We use the around component to wrap our test in the with-out-str function (which stubs all output)."]

[:h3 [:a {:name "ch7"} "Run Tests Automatically"]]
[:p "You might notice that loading up our tests takes a long time, yet actually running our tests happens extremely quickly. This occurs because Clojure runs on the Java Virtual Machine (JVM). One way we can bypass this annoying load up time is by setting our tests to stay loaded up and run whenever we save any changes to our code. This can be accomplished by running the following command from our terminal:"]

[:code "lein spec -a"]
[:span {:id "lesson_nav"} [:a {:href "/tutorial/step4#ch5"} "<-- Multiple Test Files"] "&nbsp;&nbsp;|&nbsp;&nbsp;" [:a {:href "/tutorial/step6"} "Decoupling Tests -->"]]
